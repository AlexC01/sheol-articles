generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  email            String    @unique
  name             String
  hashedPassword   String?
  image            String?
  emailVerified    DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  articlesLikes    String[]  @db.ObjectId
  articlesDislikes String[]  @db.ObjectId
  articles         Article[]
  reviews          Review[]
  Account          Account[]

  @@map("users")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Article {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  content       String
  image         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  author        User     @relation(fields: [authorId], references: [id])
  authorId      String   @db.ObjectId
  reviews       Review[]
  totalLikes    Int      @default(0)
  totalDislikes Int      @default(0)

  @@map("articles")
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  article   Article  @relation(fields: [articleId], references: [id])
  articleId String   @db.ObjectId

  @@map("reviews")
}
